{% trans_default_domain 'CyberAppUploaderBundle' %}

{% block uploader_widget %}
    {% if multiple %}
        {{ block('uploader_multiple_widget') }}
    {% else %}
        {{ block('uploader_single_widget') }}
    {% endif %}
{% endblock %}

{% block uploader_stylesheet %}
    {% if multiple %}
        {{ block('uploader_multiple_stylesheet') }}
    {% else %}
        {{ block('uploader_single_stylesheet') }}
    {% endif %}
{% endblock %}

{% block uploader_javascript %}
    {% if multiple %}
        {{ block('uploader_multiple_javascript') }}
    {% else %}
        {{ block('uploader_single_javascript') }}
    {% endif %}
{% endblock %}

{% block uploader_single_widget %}
    {% set href = false %}
    {% if value and uploader_is_uploaded_file(endpoint, value) %}
        {% set href = uri_prefix ~ value %}
    {% elseif value %}
        {% set href = url('view_orphanage_upload', {'endpoint': endpoint, 'file': value}) %}
    {% endif %}

    <div class="uploader has-error">
        <span class="btn-group">
            <a class="btn btn-primary fileinput-button">
                {{ icon('plus') }}&nbsp;<span>{{ 'uploader.choice'|trans }}</span>
                <input id="{{ id }}_file_upload" type="file" /></a>
            <a id="{{ id }}_download" class="btn btn-info{% if not value %} disabled{% endif %}"
               {% if href %}href="{{ href }}"{% endif %}
               data-uri-prefix="{{ uri_prefix }}"
               target="_blank">{{ icon('eye') }}&nbsp;{{ 'uploader.view'|trans }}</a>
            <a id="{{ id }}_remove" class="btn btn-danger{% if not value %} disabled{% endif %}"
               href="#">{{ icon('trash') }}&nbsp;{{ 'uploader.remove'|trans }}</a>
        </span>
        <span id="{{ id }}_progress" class="text-primary" style="display: none"></span>
        <span id="{{ id }}_error" class="help-block" style="display: none"></span>
    </div>

    {{ block('hidden_widget') }}
{% endblock %}

{% block uploader_single_stylesheet %}
    <style type="text/css">
        .uploader > span {
            display: inline-block;
            margin-right: 5px;
        }
    </style>
{% endblock %}

{% block uploader_single_javascript %}
    <script type="text/javascript">
        if (! jQuery) {
            throw new Error("jQuery is not defined");
        }

        (function () {
            "use strict";

            if (! $.fn.fileupload) {
                throw new Error("jQuery File Upload plugin is not defined");
            }

            $(function () {
                var messages = {{ messages|json_encode|raw }},
                        fileValue = $("#{{ id }}"),
                        fileError = $("#{{ id }}_error"),
                        fileUpload = $("#{{ id }}_file_upload"),
                        fileRemove = $("#{{ id }}_remove"),
                        fileDownload = $("#{{ id }}_download"),
                        fileProgress = $("#{{ id }}_progress");

                fileRemove.on('click', function (e) {
                    e.preventDefault();

                    fileError.hide();
                    fileValue.val('');
                    fileRemove.addClass('disabled');
                    fileDownload.addClass('disabled');
                });

                fileUpload.fileupload($.extend(true, {{ options|json_encode|raw }}, {
                    url: "{{ oneup_uploader_endpoint(endpoint) }}",
                    {% if accept_file_types %}acceptFileTypes: {{ accept_file_types }},{% endif %}
                    start: function () {
                        fileError.hide();
                        fileRemove.addClass('disabled');
                        fileDownload.addClass('disabled');
                        fileProgress.text("0 %").show();
                    },
                    progress: function (e, data) {
                        fileProgress.text(parseInt(data.loaded / data.total * 100, 10) + " %");
                    },
                    done: function (e, data) {
                        var files = data.result.files || [],
                            errors = [];

                        for (var i = 0; i < files.length; i++) {
                            if (files[i].error) {
                                errors.push(messages[files[i].error]);
                            } else if (files[i].name) {
                                fileValue.val(files[i].name);
                                fileDownload
                                        .attr('href', files[i].url || fileDownload.data('uri-prefix') + files[i].name);
                            }
                        }

                        if (fileValue.val()) {
                            fileRemove.removeClass('disabled');
                            fileDownload.removeClass('disabled');
                        }

                        if (errors.length > 0) {
                            fileError.html(errors.join("\n")).show();
                        }

                        fileProgress.hide();
                    },
                    fail: function () {
                        fileError.text(messages["error.unknown"]).show();
                        fileProgress.hide();
                    },
                    processfail: function (e, data) {
                        if (! data.files.error) {
                            return ;
                        }

                        var files = data.files || [],
                            errors = [];

                        for (var i = 0; i < files.length; i++) {
                            if (files[i].error) {
                                errors.push(files[i].error);
                            }
                        }

                        if (errors.length > 0) {
                            fileError.html(errors.join("\n")).show();
                        }
                    }
                }));
            });
        })(jQuery);
    </script>
{% endblock %}

{% block uploader_multiple_widget %}
    <div class="uploader has-error">
        <p><a class="btn btn-primary fileinput-button">
                {{ icon('plus') }}&nbsp;<span>{{ 'uploader.choices'|trans }}</span>
                <input id="{{ id }}_uploader" type="file" multiple="multiple" /></a></p>

        <div id="{{ id }}_files" data-uri-prefix="{{ uri_prefix }}"
             data-prototype="{{ block('uploader_multiple_file')|e }}">
            {% for file in value %}
                {{ block('uploader_multiple_file') }}
            {% endfor %}
        </div>
    </div>
{% endblock %}

{% block uploader_multiple_file %}
    {% set file = file|default(null) %}

    {% set href = false %}
    {% if file and uploader_is_uploaded_file(endpoint, file)%}
        {% set href = uri_prefix ~ file %}
    {% elseif file %}
        {% set href = url('view_orphanage_upload', {'endpoint': endpoint, 'file': file}) %}
    {% endif %}

    <p data-behaviour="container">
        <span class="btn-group">
            <a class="btn btn-info" data-behaviour="download"
               {% if href %}href="{{ href }}"{% endif %}
               target="_blank">{{ icon('eye') }}&nbsp;{{ 'uploader.view'|trans }}</a>
            <a class="btn btn-danger" data-behaviour="remove"
               href="#">{{ icon('trash') }}&nbsp;{{ 'uploader.remove'|trans }}</a>
        </span>
        <span data-behaviour="progress" class="text-primary" style="display: none">0 %</span>
        <span data-behaviour="error" class="help-block" style="display: none"></span>
        <input data-behaviour="value" type="hidden" name="{{ full_name }}"
               {% if file %} value="{{ file }}"{% endif %} />
    </p>
{% endblock %}

{% block uploader_multiple_stylesheet %}
    <style type="text/css">
        .uploader p:last-child {
            margin: 0;
        }
    </style>
{% endblock %}

{% block uploader_multiple_javascript %}
    <script type="text/javascript">
        if (! jQuery) {
            throw new Error("jQuery is not defined");
        }

        (function () {
            "use strict";

            if (! $.fn.fileupload) {
                throw new Error("jQuery File Upload plugin is not defined");
            }

            $(function () {
                var messages = {{ messages|json_encode|raw }},
                    uploader = $("#{{ id }}_uploader"),
                    uploaderFiles = $("#{{ id }}_files");

                uploaderFiles.on('click', '[data-behaviour=remove]', function (e) {
                    e.preventDefault();

                    $(this).closest('[data-behaviour=container]').remove();
                });

                uploader.fileupload($.extend(true, {{ options|json_encode|raw }}, {
                    url: "{{ oneup_uploader_endpoint(endpoint) }}",
                    {% if accept_file_types %}acceptFileTypes: {{ accept_file_types }},{% endif %}
                    change: function (e, data) {
                        $.each(data.files, function (index, file) {
                            file.id = 'file-' + (new Date()).getTime();
                            file.container = $(uploaderFiles.data('prototype'));

                            $('[data-behaviour=download]', file.container).addClass('disabled');
                            $('[data-behaviour=remove]', file.container).addClass('disabled');

                            uploaderFiles.append(file.container);
                        });
                    },
                    progress: function (e, data) {
                        $.each(data.files, function (index, file) {
                            $('[data-behaviour=progress]', file.container)
                                .text(parseInt(data.loaded / data.total * 100, 10) + ' %');
                        });
                    },
                    done: function (e, data) {
                        $.each(data.result.files, function (index, file) {
                            file.container = data.files[index].container;

                            if (file.error) {
                                $('[data-behaviour=error]', file.container).text(file.error).show();
                            } else if (file.name) {
                                $('[data-behaviour=value]', file.container).val(file.name);
                                $('[data-behaviour=download]', file.container)
                                        .attr('href', file.url || uploaderFiles.data('uri-prefix') + file.name)
                                        .removeClass('disabled');
                            }

                            $('[data-behaviour=remove]', file.container).removeClass('disabled');
                            $('[data-behaviour=progress]', file.container).hide();
                        });
                    },
                    fail: function (e, data) {
                        $.each(data.files, function (index, file) {
                            $('[data-behaviour=error]', file.container).text(messages["error.unknown"]).show();
                            $('[data-behaviour=value]', file.container).remove();
                            $('[data-behaviour=remove]', file.container).removeClass('disabled');
                            $('[data-behaviour=progress]', file.container).hide();
                        });
                    },
                    processalways: function (e, data) {
                        var file = data.files[data.index];

                        if (file.error) {
                            $('[data-behaviour=error]', file.container).text(file.error).show();
                            $('[data-behaviour=value]', file.container).remove();
                            $('[data-behaviour=remove]', file.container).removeClass('disabled');
                        } else {
                            $('[data-behaviour=progress]', file.container).show();
                        }
                    }
                }));
            });
        })(jQuery);
    </script>
{% endblock %}